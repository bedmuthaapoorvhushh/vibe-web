{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom/client';import'./login.css';import App from'./App';import reportWebVitals from'./reportWebVitals';import Login from'./login';import Catalog from'./Catalog';import Analytics from'./Analytics';import Contact from'./Contact';import{createBrowserRouter,RouterProvider}from\"react-router-dom\";import{GoogleOAuthProvider}from'@react-oauth/google';import{jsx as _jsx}from\"react/jsx-runtime\";function MyProject(){const[user,setUser]=React.useState(null);const clientid=\"477035451594-v4atd2luf5hn7tcbdqbs19ro0vupfegb.apps.googleusercontent.com\";React.useEffect(()=>{const storedUser=localStorage.getItem('user');if(storedUser){setUser(storedUser);}},[]);const router=createBrowserRouter([{path:\"/\",element:/*#__PURE__*/_jsx(Login,{user:user,setUser:setUser})},{path:\"/app\",element:/*#__PURE__*/_jsx(App,{user:user,setUser:setUser})},{path:\"/app1\",element:/*#__PURE__*/_jsx(App,{user:user,setUser:setUser})},{path:\"/catalog\",element:/*#__PURE__*/_jsx(Catalog,{user:user,setUser:setUser})},{path:\"/analytics\",element:/*#__PURE__*/_jsx(Analytics,{user:user,setUser:setUser})},{path:\"/contacts\",element:/*#__PURE__*/_jsx(Contact,{user:user,setUser:setUser})}]);return/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(GoogleOAuthProvider,{clientId:clientid,children:/*#__PURE__*/_jsx(RouterProvider,{router:router})})});}const root=ReactDOM.createRoot(document.getElementById('root'));root.render(/*#__PURE__*/_jsx(MyProject,{}));// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","Login","Catalog","Analytics","Contact","createBrowserRouter","RouterProvider","GoogleOAuthProvider","jsx","_jsx","MyProject","user","setUser","useState","clientid","useEffect","storedUser","localStorage","getItem","router","path","element","StrictMode","children","clientId","root","createRoot","document","getElementById","render"],"sources":["C:/INTERN/task1/vibe-web/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './login.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Login from './login';\nimport Catalog from './Catalog';\nimport Analytics from './Analytics';\nimport Contact from './Contact'\nimport {\n  createBrowserRouter,\n  RouterProvider,\n} from \"react-router-dom\";\nimport { GoogleOAuthProvider } from '@react-oauth/google';\n\n\n\nfunction MyProject(){\n\nconst [user, setUser] = React.useState(null);\nconst clientid= \"477035451594-v4atd2luf5hn7tcbdqbs19ro0vupfegb.apps.googleusercontent.com\"\n\n\nReact.useEffect(() => {\n  const storedUser = localStorage.getItem('user');\n  if (storedUser) {\n      setUser(storedUser);\n  }\n}, []);\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <Login user={user} setUser={setUser} />,\n  },\n  {\n    path: \"/app\",\n    element: <App user={user}  setUser={setUser} />,\n  },\n  {\n    path: \"/app1\",\n    element: <App user={user} setUser={setUser}  />,\n  },\n  {\n    path: \"/catalog\",\n    element: <Catalog user={user} setUser={setUser} />,\n  },\n  {\n    path: \"/analytics\",\n    element: <Analytics user={user} setUser={setUser} />\n  },\n  {\n    path: \"/contacts\",\n    element: <Contact user={user} setUser={setUser} />\n  }\n]);\n\n  return(\n    <React.StrictMode>\n    <GoogleOAuthProvider clientId={clientid}>\n    < RouterProvider router={router} />\n    </GoogleOAuthProvider>\n    </React.StrictMode>\n  )\n}\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    < MyProject />\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,MAAO,aAAa,CACpB,MAAO,CAAAC,GAAG,KAAM,OAAO,CACvB,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAC/C,MAAO,CAAAC,KAAK,KAAM,SAAS,CAC3B,MAAO,CAAAC,OAAO,KAAM,WAAW,CAC/B,MAAO,CAAAC,SAAS,KAAM,aAAa,CACnC,MAAO,CAAAC,OAAO,KAAM,WAAW,CAC/B,OACEC,mBAAmB,CACnBC,cAAc,KACT,kBAAkB,CACzB,OAASC,mBAAmB,KAAQ,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAI1D,QAAS,CAAAC,SAASA,CAAA,CAAE,CAEpB,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGf,KAAK,CAACgB,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAAAC,QAAQ,CAAE,0EAA0E,CAG1FjB,KAAK,CAACkB,SAAS,CAAC,IAAM,CACpB,KAAM,CAAAC,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAC/C,GAAIF,UAAU,CAAE,CACZJ,OAAO,CAACI,UAAU,CAAC,CACvB,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAG,MAAM,CAAGd,mBAAmB,CAAC,CACjC,CACEe,IAAI,CAAE,GAAG,CACTC,OAAO,cAAEZ,IAAA,CAACR,KAAK,EAACU,IAAI,CAAEA,IAAK,CAACC,OAAO,CAAEA,OAAQ,CAAE,CACjD,CAAC,CACD,CACEQ,IAAI,CAAE,MAAM,CACZC,OAAO,cAAEZ,IAAA,CAACV,GAAG,EAACY,IAAI,CAAEA,IAAK,CAAEC,OAAO,CAAEA,OAAQ,CAAE,CAChD,CAAC,CACD,CACEQ,IAAI,CAAE,OAAO,CACbC,OAAO,cAAEZ,IAAA,CAACV,GAAG,EAACY,IAAI,CAAEA,IAAK,CAACC,OAAO,CAAEA,OAAQ,CAAG,CAChD,CAAC,CACD,CACEQ,IAAI,CAAE,UAAU,CAChBC,OAAO,cAAEZ,IAAA,CAACP,OAAO,EAACS,IAAI,CAAEA,IAAK,CAACC,OAAO,CAAEA,OAAQ,CAAE,CACnD,CAAC,CACD,CACEQ,IAAI,CAAE,YAAY,CAClBC,OAAO,cAAEZ,IAAA,CAACN,SAAS,EAACQ,IAAI,CAAEA,IAAK,CAACC,OAAO,CAAEA,OAAQ,CAAE,CACrD,CAAC,CACD,CACEQ,IAAI,CAAE,WAAW,CACjBC,OAAO,cAAEZ,IAAA,CAACL,OAAO,EAACO,IAAI,CAAEA,IAAK,CAACC,OAAO,CAAEA,OAAQ,CAAE,CACnD,CAAC,CACF,CAAC,CAEA,mBACEH,IAAA,CAACZ,KAAK,CAACyB,UAAU,EAAAC,QAAA,cACjBd,IAAA,CAACF,mBAAmB,EAACiB,QAAQ,CAAEV,QAAS,CAAAS,QAAA,cACxCd,IAAA,CAAEH,cAAc,EAACa,MAAM,CAAEA,MAAO,CAAE,CAAC,CACd,CAAC,CACJ,CAAC,CAEvB,CAGA,KAAM,CAAAM,IAAI,CAAG3B,QAAQ,CAAC4B,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CACjEH,IAAI,CAACI,MAAM,cACPpB,IAAA,CAAEC,SAAS,GAAE,CACjB,CAAC,CAGD;AACA;AACA;AACAV,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}