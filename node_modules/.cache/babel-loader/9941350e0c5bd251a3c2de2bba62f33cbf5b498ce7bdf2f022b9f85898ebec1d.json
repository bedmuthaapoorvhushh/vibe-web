{"ast":null,"code":"var _jsxFileName = \"C:\\\\INTERN\\\\task1\\\\vibe-web\\\\src\\\\FileUpload.js\";\nimport React from 'react';\nimport supabase from './supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimpo;\nexport default function FileUpload({\n  setCards,\n  user\n}) {\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = async e => {\n      const text = e.target.result;\n      const rows = text.split('\\n').map(row => row.split(','));\n      const keys = rows[0].map(key => key.trim()); // Trim column names\n      const data = rows.slice(1).map(row => {\n        let obj = {};\n        row.forEach((cell, index) => {\n          obj[keys[index]] = cell.trim(); // Trim cell values\n        });\n        return obj;\n      });\n\n      // Add the user_id field to each record\n      const dataWithUserId = data.map(record => ({\n        ...record,\n        email: user.email\n      }));\n\n      // Uploading to Supabase\n      const {\n        error\n      } = await supabase.from('user_data').insert(dataWithUserId);\n      if (error) {\n        console.error('Error inserting data:', error);\n      } else {\n        setCards(dataWithUserId.map(obj => /*#__PURE__*/_jsxDEV(Card, {\n          obj: obj\n        }, obj.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 52\n        }, this)));\n      }\n    };\n    reader.readAsText(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv\",\n      id: \"csvFileInput\",\n      onChange: handleFileUpload,\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"csvFileInput\",\n      className: \"labelStyle\",\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_c = FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","supabase","jsxDEV","_jsxDEV","impo","FileUpload","setCards","user","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","text","result","rows","split","map","row","keys","key","trim","data","slice","obj","forEach","cell","index","dataWithUserId","record","email","error","from","insert","console","Card","id","fileName","_jsxFileName","lineNumber","columnNumber","readAsText","children","type","accept","onChange","style","display","htmlFor","className","_c","$RefreshReg$"],"sources":["C:/INTERN/task1/vibe-web/src/FileUpload.js"],"sourcesContent":["import React from 'react';\r\nimport supabase from './supabaseClient';\r\nimpo\r\n\r\nexport default function FileUpload({setCards, user }) {\r\n    const handleFileUpload = async (event) => {\r\n        const file = event.target.files[0];\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = async (e) => {\r\n            const text = e.target.result;\r\n            const rows = text.split('\\n').map(row => row.split(','));\r\n            const keys = rows[0].map(key => key.trim()); // Trim column names\r\n            const data = rows.slice(1).map(row => {\r\n                let obj = {};\r\n                row.forEach((cell, index) => {\r\n                    obj[keys[index]] = cell.trim(); // Trim cell values\r\n                });\r\n                return obj;\r\n            });\r\n\r\n            // Add the user_id field to each record\r\n            const dataWithUserId = data.map(record => ({\r\n                ...record,\r\n                email: user.email\r\n            }));\r\n\r\n            // Uploading to Supabase\r\n            const { error } = await supabase\r\n                .from('user_data')\r\n                .insert(dataWithUserId);\r\n\r\n            if (error) {\r\n                console.error('Error inserting data:', error);\r\n            } else {\r\n                setCards(dataWithUserId.map(obj => <Card key={obj.id} obj={obj} />)); }\r\n        };\r\n\r\n        reader.readAsText(file);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"file\"\r\n                accept=\".csv\"\r\n                id=\"csvFileInput\"\r\n                onChange={handleFileUpload}\r\n                style={{ display: 'none' }}\r\n            />\r\n            <label htmlFor=\"csvFileInput\" className=\"labelStyle\">+</label>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}