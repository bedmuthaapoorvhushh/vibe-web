{"ast":null,"code":"var _jsxFileName = \"C:\\\\INTERN\\\\task1\\\\vibe-web\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport Header from './Header';\nimport Navbar from './Navbar';\nimport Catalog from './Catalog';\nimport { useNavigate } from 'react-router-dom';\nimport supabase from './supabaseClient';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App({\n  user,\n  setUser,\n  csvData,\n  setCsvData\n}) {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function getUserData() {\n      const {\n        data,\n        error\n      } = await supabase.auth.getSession();\n      if (error) {\n        console.error('Error fetching session:', error);\n        return;\n      }\n      if (data !== null && data !== void 0 && data.session) {\n        const {\n          data: userProfile,\n          error: profileError\n        } = await supabase.from('profiles').select('*').eq('id', data.session.user.id).single();\n        if (profileError) {\n          console.error('Error fetching profile:', profileError);\n        } else {\n          setUser(userProfile);\n          {/*setUserState(data.session.user);*/}\n        }\n      } else {\n        console.log('No active session found');\n        navigate('/');\n      }\n    }\n    getUserData();\n  }, [navigate, setUser]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Catalog, {\n        userId: user.id,\n        csvData: csvData,\n        setCsvData: setCsvData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" User is Not Logged In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          navigate(\"/\");\n        },\n        children: \"Go to Home Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n/*\n        <Catalog csvData={csvData} />\n        <Header />\n */\n\n/**\n React.useEffect( ()=>{\n    async function getUserData(){\n    await supabase.auth.getUser().then((value)=>{\n        if(value.data?.user){\n          console.log(value.data.user);\n          props.setUser(value.data.user);\n        }\n    })\n  }\n  getUserData();\n  })\n\n */\n_s(App, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","Header","Navbar","Catalog","useNavigate","supabase","jsxDEV","_jsxDEV","Fragment","_Fragment","App","user","setUser","csvData","setCsvData","_s","navigate","getUserData","data","error","auth","getSession","console","session","userProfile","profileError","from","select","eq","id","single","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","userId","onClick","_c","$RefreshReg$"],"sources":["C:/INTERN/task1/vibe-web/src/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport Header from './Header';\nimport Navbar from './Navbar';\nimport Catalog from './Catalog';\nimport { useNavigate } from 'react-router-dom';\nimport supabase from './supabaseClient';\nimport './App.css'\n\nexport default function App({ user, setUser, csvData, setCsvData }) {\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        async function getUserData() {\n            const { data, error } = await supabase.auth.getSession();\n            if (error) {\n                console.error('Error fetching session:', error);\n                return;\n            }\n            if (data?.session) {\n                const { data: userProfile, error: profileError } = await supabase\n                    .from('profiles')\n                    .select('*')\n                    .eq('id', data.session.user.id)\n                    .single();\n                if (profileError) {\n                    console.error('Error fetching profile:', profileError);\n                } else {\n                    setUser(userProfile);\n                    {/*setUserState(data.session.user);*/}\n                }\n            } else {\n                console.log('No active session found');\n                navigate('/');\n            }\n        }\n        getUserData();\n    }, [navigate, setUser]);\n\n    return (\n        <div className=\"App\">\n            {\n                user ?\n                    <>\n                        <Navbar />\n                        <Catalog userId={user.id} csvData={csvData} setCsvData={setCsvData} />\n                    </>\n                    :\n                    <>\n                        <h1> User is Not Logged In</h1>\n                        <button onClick={() => { navigate(\"/\") }} >Go to Home Page</button>\n                    </>\n            }\n        </div>\n    );\n}\n\n\n/*\n        <Catalog csvData={csvData} />\n        <Header />\n */\n\n/**\n React.useEffect( ()=>{\n    async function getUserData(){\n    await supabase.auth.getUser().then((value)=>{\n        if(value.data?.user){\n          console.log(value.data.user);\n          props.setUser(value.data.user);\n        }\n    })\n  }\n  getUserData();\n  })\n\n */\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}