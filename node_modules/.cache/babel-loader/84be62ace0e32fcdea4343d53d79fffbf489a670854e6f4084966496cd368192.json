{"ast":null,"code":"import React from\"react\";import'./login.css';import{useGoogleLogin}from'@react-oauth/google';import{useNavigate}from\"react-router-dom\";import axios from'axios';import supabase from'./supabaseClient';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Login(_ref){let{user,setUser}=_ref;const navigate=useNavigate();const googlesignin=useGoogleLogin({onSuccess:async tokenResponse=>{try{console.log(tokenResponse);// Fetch user info from Google API\nconst userInfoResponse=await axios.get('https://www.googleapis.com/oauth2/v1/userinfo?alt=json',{headers:{Authorization:\"Bearer \".concat(tokenResponse.access_token)}});const{email,name}=userInfoResponse.data;console.log(\"User info:\",userInfoResponse.data);// Check if profile already exists in Supabase\nconst{data:existingProfile,error:profileError}=await supabase.from(\"profiles\").select(\"*\").eq(\"email\",email).single();if(profileError&&profileError.code!=='PGRST116'){// PGRST116: no matching row found (Supabase specific error code for no rows found)\nthrow profileError;}// If profile doesn't exist, insert it; otherwise, update it\nlet userProfile;if(!existingProfile){const{data,error}=await supabase.from(\"profiles\").insert({email:email,name:name}).single();if(error){throw error;}userProfile=data;}else{const{data,error}=await supabase.from(\"profiles\").update({name:name}).eq(\"email\",email).single();if(error){throw error;}userProfile=data;}setUser(email);localStorage.setItem('user',email);console.log(email);console.log(userProfile);// Log the user profile instead of `user`\nnavigate('/app');// Navigate to /app upon successful login\n}catch(error){console.error('Error fetching or upserting user info:',error);alert(\"Error: \".concat(error.message));// Show error message to the user\n// Handle error gracefully, e.g., show error message to the user\n}}// other options\n});// Log the user state whenever it changes\nReact.useEffect(()=>{console.log(\"User state changed:\",user);},[user]);const[formData,setFormData]=React.useState({name:\"\",email:\"\",password:\"\"});const[signinData,setSigninData]=React.useState({email:\"\",password:\"\"});function handleChange(event){const{name,value}=event.target;setFormData(prevFormData=>({...prevFormData,[name]:value}));}function handleChangeSignin(event){const{name,value}=event.target;setSigninData(prevFormData=>({...prevFormData,[name]:value}));}async function createUser(){try{const{user,error}=await supabase.auth.signUp({email:formData.email,password:formData.password,options:{data:{name:formData.name}}});if(error)throw error;alert(\"Signup successful! Please check your email to verify your account.\");}catch(error){alert(error.message);}}async function signingin(){try{const{user,error}=await supabase.auth.signInWithPassword({email:signinData.email,password:signinData.password});if(error)throw error;if(user!==null&&user!==void 0&&user.email_confirmed_at){// Fetch user profile after signing in\nconst{data:userProfile,error:profileError}=await supabase.from('profiles').select('*').eq('email',signinData.email).single();if(profileError){throw profileError;}setUser(signinData.email);localStorage.setItem('user',JSON.stringify(signinData.email));// Store user in local storage\nnavigate(\"/app\");}else{alert(\"Please verify your email address before signing in.\");}}catch(error){alert(error.message);}}React.useEffect(()=>{const signupButton=document.querySelector('.img__btn');const container=document.querySelector('.cont');const toggleSignupClass=()=>{container.classList.toggle('s--signup');};if(signupButton){signupButton.addEventListener('click',toggleSignupClass);}// Cleanup event listener on component unmount\nreturn()=>{if(signupButton){signupButton.removeEventListener('click',toggleSignupClass);}};},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"cont\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form sign-in\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Welcome!\"}),/*#__PURE__*/_jsx(\"label\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"abc@xyz.com\",onChange:handleChangeSignin,name:\"email\",value:signinData.email})}),/*#__PURE__*/_jsx(\"label\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"*****************\",onChange:handleChangeSignin,name:\"password\",value:signinData.password})}),1&&/*#__PURE__*/_jsx(\"p\",{className:\"forgot-pass\",children:\"Forgot password?\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"submit\",onClick:signingin,children:\"Sign In\"}),/*#__PURE__*/_jsx(\"p\",{className:\"OR\",children:\"-------------OR-------------\"}),/*#__PURE__*/_jsx(\"button\",{className:\"submit-google\",onClick:googlesignin,children:\"Sign in with Google\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"sub-cont\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"img\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"img__text m--up\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Don't have an account?\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Please Sign up!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"img__text m--in\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"If you already have an account,\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"just sign in.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"img__btn\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"m--up\",children:\"Sign Up\"}),/*#__PURE__*/_jsx(\"span\",{className:\"m--in\",children:/*#__PURE__*/_jsx(\"button\",{children:\"Sign In\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form sign-up\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Create your Account\"}),/*#__PURE__*/_jsx(\"label\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Name\",onChange:handleChange,name:\"name\",value:formData.name})}),/*#__PURE__*/_jsx(\"label\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email\",onChange:handleChange,name:\"email\",value:formData.email})}),/*#__PURE__*/_jsx(\"label\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",onChange:handleChange,name:\"password\",value:formData.password})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"submit\",onClick:createUser,children:\"Sign Up\"})]})]})]});}export default Login;","map":{"version":3,"names":["React","useGoogleLogin","useNavigate","axios","supabase","jsx","_jsx","jsxs","_jsxs","Login","_ref","user","setUser","navigate","googlesignin","onSuccess","tokenResponse","console","log","userInfoResponse","get","headers","Authorization","concat","access_token","email","name","data","existingProfile","error","profileError","from","select","eq","single","code","userProfile","insert","update","localStorage","setItem","alert","message","useEffect","formData","setFormData","useState","password","signinData","setSigninData","handleChange","event","value","target","prevFormData","handleChangeSignin","createUser","auth","signUp","options","signingin","signInWithPassword","email_confirmed_at","JSON","stringify","signupButton","document","querySelector","container","toggleSignupClass","classList","toggle","addEventListener","removeEventListener","className","children","type","placeholder","onChange","onClick"],"sources":["C:/INTERN/task1/vibe-web/src/login.js"],"sourcesContent":["import React from \"react\";\r\nimport './login.css';\r\nimport { useGoogleLogin } from '@react-oauth/google';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport supabase from './supabaseClient';\r\n\r\nfunction Login({user, setUser }) {\r\n    const navigate = useNavigate();\r\n\r\n    const googlesignin = useGoogleLogin({\r\n        onSuccess: async (tokenResponse) => {\r\n            try {\r\n                console.log(tokenResponse);\r\n\r\n                // Fetch user info from Google API\r\n                const userInfoResponse = await axios.get(\r\n                    'https://www.googleapis.com/oauth2/v1/userinfo?alt=json',\r\n                    {\r\n                        headers: {\r\n                            Authorization: `Bearer ${tokenResponse.access_token}`,\r\n                        },\r\n                    }\r\n                );\r\n\r\n                const { email, name } = userInfoResponse.data;\r\n                console.log(\"User info:\", userInfoResponse.data);\r\n\r\n                // Check if profile already exists in Supabase\r\n                const { data: existingProfile, error: profileError } = await supabase\r\n                    .from(\"profiles\")\r\n                    .select(\"*\")\r\n                    .eq(\"email\", email)\r\n                    .single();\r\n\r\n                if (profileError && profileError.code !== 'PGRST116') {\r\n                    // PGRST116: no matching row found (Supabase specific error code for no rows found)\r\n                    throw profileError;\r\n                }\r\n\r\n                // If profile doesn't exist, insert it; otherwise, update it\r\n                let userProfile;\r\n                if (!existingProfile) {\r\n                    const { data, error } = await supabase\r\n                        .from(\"profiles\")\r\n                        .insert({\r\n                            email: email,\r\n                            name: name,\r\n                        })\r\n                        .single();\r\n\r\n                    if (error) {\r\n                        throw error;\r\n                    }\r\n\r\n                    userProfile = data;\r\n                } else {\r\n                    const { data, error } = await supabase\r\n                        .from(\"profiles\")\r\n                        .update({\r\n                            name: name,\r\n                        })\r\n                        .eq(\"email\", email)\r\n                        .single();\r\n\r\n                    if (error) {\r\n                        throw error;\r\n                    }\r\n\r\n                    userProfile = data;\r\n                }\r\n\r\n                setUser(email);\r\n                localStorage.setItem('user', email);\r\n\r\n                console.log(email);\r\n                console.log(userProfile); // Log the user profile instead of `user`\r\n                navigate('/app'); // Navigate to /app upon successful login\r\n            } catch (error) {\r\n                console.error('Error fetching or upserting user info:', error);\r\n                alert(`Error: ${error.message}`); // Show error message to the user\r\n                // Handle error gracefully, e.g., show error message to the user\r\n            }\r\n        },\r\n        // other options\r\n    });\r\n    \r\n    // Log the user state whenever it changes\r\n    React.useEffect(() => {\r\n        console.log(\"User state changed:\", user);\r\n    }, [user]);\r\n\r\n    const [formData, setFormData] = React.useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    const [signinData, setSigninData] = React.useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    function handleChange(event) {\r\n        const { name, value } = event.target;\r\n        setFormData(prevFormData => ({\r\n            ...prevFormData,\r\n            [name]: value\r\n        }));\r\n    }\r\n\r\n    function handleChangeSignin(event) {\r\n        const { name, value } = event.target;\r\n        setSigninData(prevFormData => ({\r\n            ...prevFormData,\r\n            [name]: value\r\n        }));\r\n    }\r\n\r\n    async function createUser() {\r\n        try {\r\n            const { user, error } = await supabase.auth.signUp({\r\n                email: formData.email,\r\n                password: formData.password,\r\n                options: {\r\n                    data: {\r\n                        name: formData.name\r\n                    }\r\n                }\r\n            });\r\n\r\n            if (error) throw error;\r\n\r\n            alert(\"Signup successful! Please check your email to verify your account.\");\r\n        } catch (error) {\r\n            alert(error.message);\r\n        }\r\n    }\r\n\r\n    async function signingin() {\r\n        try {\r\n            const { user, error } = await supabase.auth.signInWithPassword({\r\n                email: signinData.email,\r\n                password: signinData.password\r\n            });\r\n\r\n            if (error) throw error;\r\n\r\n            if (user?.email_confirmed_at) {\r\n                // Fetch user profile after signing in\r\n                const { data: userProfile, error: profileError } = await supabase\r\n                    .from('profiles')\r\n                    .select('*')\r\n                    .eq('email', signinData.email)\r\n                    .single();\r\n\r\n                if (profileError) {\r\n                    throw profileError;\r\n                }\r\n\r\n                setUser(signinData.email);\r\n                localStorage.setItem('user', JSON.stringify(signinData.email)); // Store user in local storage\r\n                navigate(\"/app\");\r\n            } else {\r\n                alert(\"Please verify your email address before signing in.\");\r\n            }\r\n        } catch (error) {\r\n            alert(error.message);\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        const signupButton = document.querySelector('.img__btn');\r\n        const container = document.querySelector('.cont');\r\n\r\n        const toggleSignupClass = () => {\r\n            container.classList.toggle('s--signup');\r\n        };\r\n\r\n        if (signupButton) {\r\n            signupButton.addEventListener('click', toggleSignupClass);\r\n        }\r\n\r\n        // Cleanup event listener on component unmount\r\n        return () => {\r\n            if (signupButton) {\r\n                signupButton.removeEventListener('click', toggleSignupClass);\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"cont\">\r\n            <div className=\"form sign-in\">\r\n                <h2>Welcome!</h2>\r\n                <label>\r\n                    <input\r\n                        type=\"email\"\r\n                        placeholder=\"abc@xyz.com\"\r\n                        onChange={handleChangeSignin}\r\n                        name=\"email\"\r\n                        value={signinData.email}\r\n                    />\r\n                </label>\r\n                <label>\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"*****************\"\r\n                        onChange={handleChangeSignin}\r\n                        name=\"password\"\r\n                        value={signinData.password}\r\n                    />\r\n                </label>\r\n                {1 && <p className=\"forgot-pass\">Forgot password?</p>}\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"submit\"\r\n                    onClick={signingin}\r\n                >\r\n                    Sign In\r\n                </button>\r\n                <p className=\"OR\">-------------OR-------------</p>\r\n                <button className=\"submit-google\" onClick={googlesignin}>\r\n                    Sign in with Google\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"sub-cont\">\r\n                <div className=\"img\">\r\n                    <div className=\"img__text m--up\">\r\n                        <h2>Don't have an account?</h2>\r\n                        <h2>Please Sign up!</h2>\r\n                    </div>\r\n                    <div className=\"img__text m--in\">\r\n                        <h2>If you already have an account,</h2>\r\n                        <h2>just sign in.</h2>\r\n                    </div>\r\n                    <div className=\"img__btn\">\r\n                        <span className=\"m--up\">Sign Up</span>\r\n                        <span className=\"m--in\"><button>Sign In</button></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form sign-up\">\r\n                    <h2>Create your Account</h2>\r\n                    <label>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Name\"\r\n                            onChange={handleChange}\r\n                            name=\"name\"\r\n                            value={formData.name}\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        <input\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            onChange={handleChange}\r\n                            name=\"email\"\r\n                            value={formData.email}\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            onChange={handleChange}\r\n                            name=\"password\"\r\n                            value={formData.password}\r\n                        />\r\n                    </label>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"submit\"\r\n                        onClick={createUser}\r\n                    >\r\n                        Sign Up\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}