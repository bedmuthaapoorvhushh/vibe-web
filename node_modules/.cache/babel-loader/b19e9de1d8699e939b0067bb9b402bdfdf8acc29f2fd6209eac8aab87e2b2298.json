{"ast":null,"code":"var _jsxFileName = \"C:\\\\INTERN\\\\task1\\\\vibe-web\\\\src\\\\FileUpload.js\";\nimport React from 'react';\nimport Papa from 'papaparse';\nimport supabase from './supabaseClient';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FileUpload({\n  setCards,\n  user,\n  cards\n}) {\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = async e => {\n      console.log('File loaded successfully.');\n      const text = e.target.result;\n      console.log('File content:', text);\n      const {\n        data,\n        errors\n      } = Papa.parse(text, {\n        header: true,\n        skipEmptyLines: true\n      });\n      console.log('Parsed data:', data);\n      if (errors.length > 0) {\n        console.error('CSV parsing error:', errors);\n        return;\n      }\n\n      // Add the email field to each record\n      const dataWithEmail = data.map(record => ({\n        ...record,\n        email: user.email\n      }));\n      console.log('Data with email:', dataWithEmail);\n\n      // Uploading to Supabase\n      const {\n        error\n      } = await supabase.from('user_data').insert(dataWithEmail);\n      if (error) {\n        console.error('Error inserting data:', error);\n      } else {\n        // Update state with new cards if needed\n        console.log('Data inserted successfully:', dataWithEmail);\n        setCards(userData.map(obj => /*#__PURE__*/_jsxDEV(Card, {\n          obj: obj\n        }, obj.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 46\n        }, this)));\n      }\n    };\n    reader.readAsText(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv\",\n      id: \"csvFileInput\",\n      onChange: handleFileUpload,\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"csvFileInput\",\n      className: \"labelStyle\",\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_c = FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","Papa","supabase","Card","jsxDEV","_jsxDEV","FileUpload","setCards","user","cards","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","console","log","text","result","data","errors","parse","header","skipEmptyLines","length","error","dataWithEmail","map","record","email","from","insert","userData","obj","id","fileName","_jsxFileName","lineNumber","columnNumber","readAsText","children","type","accept","onChange","style","display","htmlFor","className","_c","$RefreshReg$"],"sources":["C:/INTERN/task1/vibe-web/src/FileUpload.js"],"sourcesContent":["import React from 'react';\r\nimport Papa from 'papaparse';\r\nimport supabase from './supabaseClient';\r\nimport Card from './Card';\r\n\r\nexport default function FileUpload({ setCards, user, cards }) {\r\n    const handleFileUpload = async (event) => {\r\n        const file = event.target.files[0];\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = async (e) => {\r\n            console.log('File loaded successfully.');\r\n\r\n            const text = e.target.result;\r\n            console.log('File content:', text);\r\n\r\n            const { data, errors } = Papa.parse(text, {\r\n                header: true,\r\n                skipEmptyLines: true\r\n            });\r\n\r\n            console.log('Parsed data:', data);\r\n\r\n            if (errors.length > 0) {\r\n                console.error('CSV parsing error:', errors);\r\n                return;\r\n            }\r\n\r\n            // Add the email field to each record\r\n            const dataWithEmail = data.map(record => ({\r\n                ...record,\r\n                email: user.email\r\n            }));\r\n\r\n            console.log('Data with email:', dataWithEmail);\r\n\r\n            // Uploading to Supabase\r\n            const { error } = await supabase\r\n                .from('user_data')\r\n                .insert(dataWithEmail);\r\n\r\n            if (error) {\r\n                console.error('Error inserting data:', error);\r\n            } else {\r\n                // Update state with new cards if needed\r\n                console.log('Data inserted successfully:', dataWithEmail);\r\n                setCards(userData.map(obj => <Card key={obj.id} obj={obj} />));\r\n            }\r\n        };\r\n\r\n        reader.readAsText(file);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"file\"\r\n                accept=\".csv\"\r\n                id=\"csvFileInput\"\r\n                onChange={handleFileUpload}\r\n                style={{ display: 'none' }}\r\n            />\r\n            <label htmlFor=\"csvFileInput\" className=\"labelStyle\">+</label>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}