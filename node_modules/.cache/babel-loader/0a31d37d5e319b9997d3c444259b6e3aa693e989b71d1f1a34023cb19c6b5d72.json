{"ast":null,"code":"var _jsxFileName = \"C:\\\\INTERN\\\\task1\\\\vibe-web\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './login.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Login from './login';\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport { GoogleOAuthProvider } from '@react-oauth/google';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [user, setUser] = React.useState([]);\nconst clientid = \"477035451594-v4atd2luf5hn7tcbdqbs19ro0vupfegb.apps.googleusercontent.com\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(App, {\n    user: user,\n    setUser: setUser\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 14\n  }, this)\n}, {\n  path: \"/app\",\n  element: /*#__PURE__*/_jsxDEV(App, {\n    user: user,\n    setUser: setUser\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 14\n  }, this)\n}, {\n  path: \"/app1\",\n  element: /*#__PURE__*/_jsxDEV(App, {\n    user: user,\n    setUser: setUser\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 14\n  }, this)\n}]);\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: clientid,\n    children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: router\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 37,\n  columnNumber: 5\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","Login","createBrowserRouter","RouterProvider","GoogleOAuthProvider","jsxDEV","_jsxDEV","user","setUser","useState","clientid","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","root","createRoot","document","getElementById","render","StrictMode","children","clientId"],"sources":["C:/INTERN/task1/vibe-web/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './login.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Login from './login';\nimport {\n  createBrowserRouter,\n  RouterProvider,\n} from \"react-router-dom\";\nimport { GoogleOAuthProvider } from '@react-oauth/google';\n\nconst [user, setUser] = React.useState([]);\nconst clientid= \"477035451594-v4atd2luf5hn7tcbdqbs19ro0vupfegb.apps.googleusercontent.com\"\n\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <App user={user}  setUser={setUser} />,\n  },\n  {\n    path: \"/app\",\n    element: <App user={user}  setUser={setUser} />,\n  },\n  {\n    path: \"/app1\",\n    element: <App user={user}  setUser={setUser} />,\n  },\n]);\n\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <React.StrictMode>\n    <GoogleOAuthProvider clientId={clientid}>\n    < RouterProvider router={router} />\n    </GoogleOAuthProvider>\n    </React.StrictMode>\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,KAAK,MAAM,SAAS;AAC3B,SACEC,mBAAmB,EACnBC,cAAc,QACT,kBAAkB;AACzB,SAASC,mBAAmB,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,KAAK,CAACY,QAAQ,CAAC,EAAE,CAAC;AAC1C,MAAMC,QAAQ,GAAE,0EAA0E;AAG1F,MAAMC,MAAM,GAAGT,mBAAmB,CAAC,CACjC;EACEU,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEP,OAAA,CAACP,GAAG;IAACQ,IAAI,EAAEA,IAAK;IAAEC,OAAO,EAAEA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAChD,CAAC,EACD;EACEL,IAAI,EAAE,MAAM;EACZC,OAAO,eAAEP,OAAA,CAACP,GAAG;IAACQ,IAAI,EAAEA,IAAK;IAAEC,OAAO,EAAEA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAChD,CAAC,EACD;EACEL,IAAI,EAAE,OAAO;EACbC,OAAO,eAAEP,OAAA,CAACP,GAAG;IAACQ,IAAI,EAAEA,IAAK;IAAEC,OAAO,EAAEA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAChD,CAAC,CACF,CAAC;AAKF,MAAMC,IAAI,GAAGpB,QAAQ,CAACqB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACPhB,OAAA,CAACT,KAAK,CAAC0B,UAAU;EAAAC,QAAA,eACjBlB,OAAA,CAACF,mBAAmB;IAACqB,QAAQ,EAAEf,QAAS;IAAAc,QAAA,eACxClB,OAAA,CAAEH,cAAc;MAACQ,MAAM,EAAEA;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACJ,CACtB,CAAC;;AAGD;AACA;AACA;AACAjB,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}